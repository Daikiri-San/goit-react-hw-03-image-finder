{"version":3,"sources":["services/pixabayApi.js","components/Layout.js","components/Notification.js","components/Modal.js","view/IntObserver.js","components/IntObsInfiniteScroll.js","components/SearchBar.js","components/Spinner.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/App.js","index.js"],"names":["searchQuery","a","async","page","axios","defaults","baseURL","key","get","params","q","image_type","orientation","per_page","data","Container","styled","div","Layout","children","Text","p","Notification","message","Overlay","ModalWindow","Modal","closeModalOnESC","this","props","window","addEventListener","removeEventListener","image","closeModal","onClick","src","alt","Component","createObserver","observeElem","func","IntersectionObserver","entry","isIntersecting","rootMargin","threshold","observe","IntObsInfiniteScroll","fetchImages","guard","document","querySelector","IntObserver","id","Header","header","SearchForm","form","Button","button","Label","span","Input","input","SearchBar","state","inputValue","handleInput","value","target","setState","handleSubmit","e","preventDefault","handleSearchFormSubmit","onSubmit","type","onChange","placeholder","autocomplete","autoFocus","required","name","SpinnerContainer","Spinner","color","height","width","ListItem","li","Image","img","ImageGalleryItem","imagesForList","tags","largeImageURL","openModal","data-source","defaultProps","images","List","ul","ImageGallery","listOfImages","map","webformatURL","App","modalImage","error","loading","allImagesGotten","pixadayApi","incommingImages","prevState","hits","length","totalHits","largeImage","dataset","source","hasAttribute","code","query","prevProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.c63491e5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchArticlesWithQuery = async (searchQuery, page = 0) => {\r\n  // const sorryCors = 'https://cors-anywhere.herokuapp.com/';\r\n  axios.defaults.baseURL = `https://pixabay.com/api`;\r\n  const key = '14527568-6591a78188764a7d597b0a4aa';\r\n\r\n  const { data } = await axios.get('/', {\r\n    params: {\r\n      q: searchQuery,\r\n      page: page,\r\n      key,\r\n      image_type: 'photo',\r\n      orientation: 'horizontal',\r\n      per_page: 12,\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nexport default {\r\n  fetchArticlesWithQuery,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.p`\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  font-weight: 700;\r\n  margin-top: 8rem;\r\n  font-size: 5rem;\r\n`;\r\n\r\nfunction Notification({ message }) {\r\n  return <Text>{message}</Text>;\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nconst ModalWindow = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    const { closeModalOnESC } = this.props;\r\n    window.addEventListener('keydown', closeModalOnESC);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { closeModalOnESC } = this.props;\r\n    window.removeEventListener('keydown', closeModalOnESC);\r\n  }\r\n\r\n  render() {\r\n    const { image, closeModal } = this.props;\r\n    return (\r\n      <Overlay onClick={closeModal}>\r\n        <ModalWindow>\r\n          <img src={image} alt=\"\" />\r\n        </ModalWindow>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","function createObserver(observeElem, func) {\r\n  const onEntry = entry => {\r\n    if (entry[0].isIntersecting) {\r\n      func();\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    rootMargin: '0px 0px 500px 0px',\r\n    threshold: 0.01,\r\n  };\r\n\r\n  const observer = new IntersectionObserver(onEntry, options);\r\n\r\n  observer.observe(observeElem);\r\n}\r\n\r\nexport default createObserver;\r\n","import React, { Component } from 'react';\r\nimport IntObserver from '../view/IntObserver';\r\n\r\nclass IntObsInfiniteScroll extends Component {\r\n  componentDidMount() {\r\n    const { fetchImages } = this.props;\r\n    const guard = document.querySelector('#guardian');\r\n    IntObserver(guard, fetchImages);\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"guardian\"></div>;\r\n  }\r\n}\r\n\r\nexport default IntObsInfiniteScroll;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 60rem;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  transition: box-shadow 0.2s linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0px 2px 8px 1px rgba(0, 0, 0, 0.75);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  width: 5.6rem;\r\n  height: 5rem;\r\n  border: 0;\r\n  border-top-right-radius: 0.3rem;\r\n  border-bottom-right-radius: 0.3rem;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-color: #d5d7db;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n    background-color: #bbc0c9;\r\n  }\r\n\r\n  &:active {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 5rem;\r\n  font-size: 2rem;\r\n  background-color: snow;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 1.4rem;\r\n  padding-right: 1rem;\r\n\r\n  &::placeholder {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleInput = ({ target: { value } }) => {\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { inputValue } = this.state;\r\n    this.props.handleSearchFormSubmit(inputValue);\r\n\r\n    this.setState({\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <Header>\r\n        <SearchForm onSubmit={this.handleSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={this.handleInput}\r\n            placeholder=\"Search images and photos\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            required\r\n            name=\"searchInput\"\r\n          ></Input>\r\n          <Button type=\"submit\">\r\n            <Label> Search </Label>\r\n          </Button>\r\n        </SearchForm>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst SpinnerContainer = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  top: 30%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  z-index: 1100;\r\n  width: 18rem;\r\n  height: 18rem;\r\n  pointer-events: none;\r\n`;\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <SpinnerContainer>\r\n      <Loader type=\"ThreeDots\" color=\"#ff1212\" height={144} width={144} />\r\n    </SpinnerContainer>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  animation: fade 1.5s ease-in-out 1 normal forwards;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nfunction ImageGalleryItem({ imagesForList, tags, largeImageURL, openModal }) {\r\n  return (\r\n    <ListItem>\r\n      <Image\r\n        alt={tags}\r\n        src={imagesForList}\r\n        data-source={largeImageURL}\r\n        onClick={openModal}\r\n      ></Image>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  images:\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled.png',\r\n  tags: '',\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.string,\r\n  tags: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nfunction ImageGallery({ listOfImages, openModal }) {\r\n  return (\r\n    <List>\r\n      {listOfImages.map(({ id, largeImageURL, webformatURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          tags={tags}\r\n          imagesForList={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          openModal={openModal}\r\n        ></ImageGalleryItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\nimport pixadayApi from '../services/pixabayApi';\nimport Layout from './Layout';\nimport Notification from './Notification';\nimport Modal from './Modal';\nimport IntObsInfiniteScroll from './IntObsInfiniteScroll';\nimport SearchBar from './SearchBar';\nimport Spinner from './Spinner';\nimport ImageGallery from './ImageGallery';\nimport '../base.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    searchQuery: '',\n    modalImage: '',\n    error: null,\n    loading: false,\n    allImagesGotten: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      return this.fetchImages();\n    }\n  }\n\n  fetchImages = async () => {\n    this.setState({\n      loading: true,\n    });\n    const { images, page, searchQuery } = this.state;\n    try {\n      const incommingImages = await pixadayApi.fetchArticlesWithQuery(\n        searchQuery,\n        page,\n      );\n      this.setState(prevState => ({\n        images: [...prevState.images, ...incommingImages.hits],\n        page: prevState.page + 1,\n      }));\n      // console.log(`IMAGES===${images.map(item => item.id)}`);\n      // console.log(`SETSET===${[...new Set(images.map(item => item.id))]}`);\n      if (images.length === incommingImages.totalHits) {\n        this.setState({\n          allImagesGotten: true,\n        });\n      }\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  openModal = ({ target }) => {\n    const largeImage = target.dataset.source;\n    this.setState({\n      modalImage: largeImage,\n    });\n  };\n\n  closeModal = ({ target }) => {\n    if (target.hasAttribute('src')) {\n      return;\n    }\n    return this.setState({\n      modalImage: '',\n    });\n  };\n\n  closeModalOnESC = ({ code }) => {\n    if (code !== 'Escape') {\n      return;\n    }\n    return this.setState({\n      modalImage: '',\n    });\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      allImagesGotten: false,\n      images: [],\n      page: 1,\n    });\n  };\n\n  render() {\n    const { allImagesGotten, loading, images, error, modalImage } = this.state;\n\n    return (\n      <Layout>\n        <SearchBar handleSearchFormSubmit={this.handleSearchFormSubmit} />\n        {error && (\n          <Notification\n            message={`Whoops... something went wrong: ${error.message}`}\n          />\n        )}\n        {loading && <Spinner />}\n        {images.length > 0 && (\n          <ImageGallery openModal={this.openModal} listOfImages={images} />\n        )}\n        {images.length > 0 && !allImagesGotten && (\n          <IntObsInfiniteScroll fetchImages={this.fetchImages} />\n        )}\n        {modalImage && (\n          <Modal\n            closeModal={this.closeModal}\n            closeModalOnESC={this.closeModalOnESC}\n            image={modalImage}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}